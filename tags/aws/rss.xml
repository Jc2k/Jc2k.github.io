<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>unrouted.uk - aws</title>
      <link>https://unrouted.uk</link>
      <description></description>
      <generator>Zola</generator>
      <language>en</language>
      <atom:link href="https://unrouted.uk/tags/aws/rss.xml" rel="self" type="application/rss+xml"/>
      <lastBuildDate>Thu, 21 Jul 2016 00:00:00 +0000</lastBuildDate>
      <item>
          <title>How to build python code bundles for AWS Lambda quickly and easily</title>
          <pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://unrouted.uk/blog/use-make/</link>
          <guid>https://unrouted.uk/blog/use-make/</guid>
          <description xml:base="https://unrouted.uk/blog/use-make/">&lt;p&gt;AWS Lambda is conceptually really cool but as soon as your code creeps beyond a single python file that uses &lt;code&gt;botocore&lt;&#x2F;code&gt; things start to get messy and cumbersome. It&#x27;s tempting to add an entirely new tool to your workflow, but theres really no need. The approach I use is good old &lt;code&gt;make&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Raciness in Amazon RDS backups</title>
          <pubDate>Sun, 24 May 2015 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://unrouted.uk/blog/rds-backups-point-in-time/</link>
          <guid>https://unrouted.uk/blog/rds-backups-point-in-time/</guid>
          <description xml:base="https://unrouted.uk/blog/rds-backups-point-in-time/">&lt;p&gt;Want to know what the earliest point in time restore you can do is? It&#x27;s not straightforward.&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Deleting an Amazon ELB properly</title>
          <pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://unrouted.uk/blog/elb-deletion/</link>
          <guid>https://unrouted.uk/blog/elb-deletion/</guid>
          <description xml:base="https://unrouted.uk/blog/elb-deletion/">&lt;p&gt;Recently I automated deletion of an Elastic Load Balancer and the Subnet it was in. Fairly straightforward stuff. One slight problem is that an ELB doesn&#x27;t have states. When you delete one it disappears immediately. But in the background it is still there. When you try to delete the subnet it was in you get a dependency error. After a couple of minutes it does work.&lt;&#x2F;p&gt;
&lt;p&gt;The same is true if you try to delete a security group that the ELB was using.&lt;&#x2F;p&gt;
&lt;p&gt;What&#x27;s going on?&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Dealing with EBS volume hotplug</title>
          <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://unrouted.uk/blog/aws-block-deviced-added/</link>
          <guid>https://unrouted.uk/blog/aws-block-deviced-added/</guid>
          <description xml:base="https://unrouted.uk/blog/aws-block-deviced-added/">&lt;p&gt;EBS volumes are attached to EC2 instances that are running. So if you have a solr instance that starts on boot and needs to use that EBS volume you have a problem. How do you make solr wait for that EBS volume to be ready? How do you format it? How do you make all this idempotent.&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Monitoring NTP with CloudWatch</title>
          <pubDate>Sat, 03 Jan 2015 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://unrouted.uk/blog/monitoring-ntp/</link>
          <guid>https://unrouted.uk/blog/monitoring-ntp/</guid>
          <description xml:base="https://unrouted.uk/blog/monitoring-ntp/">&lt;p&gt;I&#x27;ve seen celery drop tasks on the floor because the queuers clock is to far ahead of the workers. I&#x27;ve seen boto fail to update Route53 because a clock was wrong. Time is super important. Here is a little script to look at the output of &lt;code&gt;ntpq -pn&lt;&#x2F;code&gt; and try and explain whats going on.&lt;&#x2F;p&gt;
</description>
      </item>
    </channel>
</rss>
