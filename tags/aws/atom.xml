<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>unrouted.uk - aws</title>
    <link rel="self" type="application/atom+xml" href="https://unrouted.uk/tags/aws/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://unrouted.uk"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2016-07-21T00:00:00+00:00</updated>
    <id>https://unrouted.uk/tags/aws/atom.xml</id>
    <entry xml:lang="en">
        <title>How to build python code bundles for AWS Lambda quickly and easily</title>
        <published>2016-07-21T00:00:00+00:00</published>
        <updated>2016-07-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://unrouted.uk/blog/use-make/"/>
        <id>https://unrouted.uk/blog/use-make/</id>
        
        <summary type="html">&lt;p&gt;AWS Lambda is conceptually really cool but as soon as your code creeps beyond a single python file that uses &lt;code&gt;botocore&lt;&#x2F;code&gt; things start to get messy and cumbersome. It&#x27;s tempting to add an entirely new tool to your workflow, but theres really no need. The approach I use is good old &lt;code&gt;make&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Raciness in Amazon RDS backups</title>
        <published>2015-05-24T00:00:00+00:00</published>
        <updated>2015-05-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://unrouted.uk/blog/rds-backups-point-in-time/"/>
        <id>https://unrouted.uk/blog/rds-backups-point-in-time/</id>
        
        <summary type="html">&lt;p&gt;Want to know what the earliest point in time restore you can do is? It&#x27;s not straightforward.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Deleting an Amazon ELB properly</title>
        <published>2015-04-12T00:00:00+00:00</published>
        <updated>2015-04-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://unrouted.uk/blog/elb-deletion/"/>
        <id>https://unrouted.uk/blog/elb-deletion/</id>
        
        <summary type="html">&lt;p&gt;Recently I automated deletion of an Elastic Load Balancer and the Subnet it was in. Fairly straightforward stuff. One slight problem is that an ELB doesn&#x27;t have states. When you delete one it disappears immediately. But in the background it is still there. When you try to delete the subnet it was in you get a dependency error. After a couple of minutes it does work.&lt;&#x2F;p&gt;
&lt;p&gt;The same is true if you try to delete a security group that the ELB was using.&lt;&#x2F;p&gt;
&lt;p&gt;What&#x27;s going on?&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Dealing with EBS volume hotplug</title>
        <published>2015-04-01T00:00:00+00:00</published>
        <updated>2015-04-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://unrouted.uk/blog/aws-block-deviced-added/"/>
        <id>https://unrouted.uk/blog/aws-block-deviced-added/</id>
        
        <summary type="html">&lt;p&gt;EBS volumes are attached to EC2 instances that are running. So if you have a solr instance that starts on boot and needs to use that EBS volume you have a problem. How do you make solr wait for that EBS volume to be ready? How do you format it? How do you make all this idempotent.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Monitoring NTP with CloudWatch</title>
        <published>2015-01-03T00:00:00+00:00</published>
        <updated>2015-01-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://unrouted.uk/blog/monitoring-ntp/"/>
        <id>https://unrouted.uk/blog/monitoring-ntp/</id>
        
        <summary type="html">&lt;p&gt;I&#x27;ve seen celery drop tasks on the floor because the queuers clock is to far ahead of the workers. I&#x27;ve seen boto fail to update Route53 because a clock was wrong. Time is super important. Here is a little script to look at the output of &lt;code&gt;ntpq -pn&lt;&#x2F;code&gt; and try and explain whats going on.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
